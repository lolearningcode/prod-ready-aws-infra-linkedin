name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: github-actions
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=envs/dev init

      - name: Terraform Plan
        run: |
          terraform -chdir=envs/dev plan -input=false \
            -var='app_image=${{ env.IMAGE_URI }}' \
            -var='create_oidc_provider=false' \
            -var='existing_oidc_provider_arn=arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com' \
            -var='create_sns_topic=false' \
            -var='manage_log_retention=false'

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          terraform -chdir=envs/dev apply -auto-approve -input=false \
            -var='app_image=${{ env.IMAGE_URI }}' \
            -var='create_oidc_provider=false' \
            -var='existing_oidc_provider_arn=arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com' \
            -var='create_sns_topic=false' \
            -var='manage_log_retention=false'

      - name: Show Terraform Outputs
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=envs/dev output -json